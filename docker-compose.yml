services:

  nginx:
    build:
      context: ./docker/nginx
    container_name: ${NG_DOCKER_HOST}
    restart: unless-stopped
    ports:
      - ${NG_DOCKER_PORT}:${NG_DOCKER_PORT}
    volumes:
      - ./docker/nginx/log:/var/log/nginx
      - ./:/var/www/html/
    depends_on:
      - django

  django:
    build:
      context: ./docker/django
    container_name: ${DJ_DOCKER_HOST}
    restart: unless-stopped
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DB_DOCKER_ENGINE: ${DB_DOCKER_ENGINE}
      DB_DOCKER_HOST: ${DB_DOCKER_HOST}
      DB_DOCKER_NAME: ${DB_DOCKER_NAME}
      DB_DOCKER_USER: ${DB_DOCKER_USER}
      DB_DOCKER_PASS: ${DB_DOCKER_PASS}
      DB_DOCKER_PORT: ${DB_DOCKER_PORT}
    expose:
      - ${DJ_DOCKER_PORT}:${DJ_DOCKER_PORT}
    ports:
      - ${DJ_DOCKER_PORT}:${DJ_DOCKER_PORT}
    volumes:
      - ./:/var/www/html/
    depends_on:
      - db

  db:
    build: ./docker/db
    container_name: ${DB_DOCKER_HOST}
    restart: unless-stopped
    environment:
      DB_DOCKER_ENGINE: ${DB_DOCKER_ENGINE}
      POSTGRES_DB: ${DB_DOCKER_NAME}
      POSTGRES_USER: ${DB_DOCKER_USER}
      POSTGRES_PASSWORD: ${DB_DOCKER_PASS}
      DB_HOME_SCHEMA_NAME: ${DB_DOCKER_NAME}
    ports:
      - ${DB_DOCKER_PORT}:${DB_DOCKER_PORT}
    volumes:
      - tmpl_djnp:/var/lib/postgresql/data

  s3:
    build: ./docker/s3
    container_name: ${DB_S3_HOST}
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${DB_S3_USER}
      MINIO_ROOT_PASSWORD: ${DB_S3_PASS}
    ports:
      - ${DB_S3_PORT_API}:${DB_S3_PORT_API}
      - ${DB_S3_PORT_WEB}:${DB_S3_PORT_WEB}
    volumes:
      - ./docker/s3/s3-data:/data

volumes:
  tmpl_djnp: